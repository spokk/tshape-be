service: product-service
frameworkVersion: "2"
variablesResolutionMode: 20210219

provider:
  name: aws
  runtime: nodejs12.x
  stage: 'dev'
  region: eu-west-1
  environment:
    ENV_STAGE: ${opt:stage, 'dev'}
    PGHOST: lesson4.coiucooqlsgl.eu-west-1.rds.amazonaws.com
    PGUSER: postgres
    PGDATABASE: lesson4
    PGPASSWORD: 58Sjt3ZOfwy3RJGiMZUb
    PGPORT: 5432
    SNS_ARN: !Ref createProductTopic
    SQS_URL: !Ref catalogItemsQueue

  iamRoleStatements:
    - Effect: "Allow"
      Action: "sqs:*"
      Resource:
        - Fn::GetAtt: [ catalogItemsQueue, Arn ]
    - Effect: "Allow"
      Action: "sns:*"
      Resource:
        Ref: createProductTopic
        
resources:
  Resources:
    catalogItemsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: cvs-sqs
    createProductTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: notify-about-products
    createProductTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: game1life1@gmail.com
        Protocol: email
        TopicArn:
          Ref: createProductTopic



plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true
    dotenvVars: ${file(configs.js)}

functions:
  getProductById:
    handler: handler.getProductById
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
          request:
            parameters:
              paths:
                productId: true
  getProductsList:
    handler: handler.getProductsList
    events:
      - http:
          path: products
          method: get
          cors: true
  createProduct:
    handler: handler.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
          request:
            schema:
              application/json: ${file(src/schemas/createProductSchema.json)}
  catalogBatchProcess:
    handler: handler.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt: [catalogItemsQueue, Arn]


Outputs:
  SQS_URL:
    Value: !Ref catalogItemsQueu